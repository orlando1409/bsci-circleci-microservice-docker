version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.2.0
  maven: circleci/maven@0.0.9
workflows:
  # unit-test:
  #   jobs:
  #     - maven/test:
  #         settings_file: settings.xml  
  build-test-deploy:
    jobs:
      - build
      # - maven/test:
      #     settings_file: settings.xml  
      # - build_push_image:
      #     requires:
      #       - maven/test      
      - aws-ecr/build-and-push-image:
          repo: ${CIRCLE_PROJECT_REPONAME}
          region: AWS_REGION_ENV_VAR_NAME
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          tag: ${CIRCLE_BUILD_NUM}
          create-repo: true 
          attach-workspace: true
          requires:
            - build
            # - maven/test
jobs:
  build:
    working_directory: ~/bsci-circleci-microservice-docker
    docker:
      - image: circleci/openjdk:11.0.1-jdk
    steps:
      - checkout
      - run:
          name: Build
          command: |
            ls
            mvn clean install
      - persist_to_workspace:
          root: /target/dependency
          paths:
            - BOOT-INF/lib
            - META-INF
            - BOOT-INF/classes
  # build_push_image:
  #   working_directory: ~/bsci-circleci-microservice-docker
  #   docker:
  #     - image: circleci/openjdk:11.0.1-jdk
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - run:
  #         name: Build and push Docker image to Docker Hub
  #         command: |
  #           mvn clean install
  #           echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> ${BASH_ENV}
  #           echo 'export IMAGE_NAME=${CIRCLE_PROJECT_REPONAME}' >> ${BASH_ENV}
  #           source ${BASH_ENV}
  #           docker build -t ${DOCKER_LOGIN}/${IMAGE_NAME} -t ${DOCKER_LOGIN}/${IMAGE_NAME}:${TAG} .
  #           echo ${DOCKER_PWD} | docker login -u ${DOCKER_LOGIN} --password-stdin
  #           docker push ${DOCKER_LOGIN}/${IMAGE_NAME}